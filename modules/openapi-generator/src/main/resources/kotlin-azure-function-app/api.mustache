package {{package}}

{{#imports}}import {{import}}
{{/imports}}

import kotlin.collections.List
import kotlin.collections.Map


import com.microsoft.azure.*
import com.microsoft.azure.functions.*
import com.microsoft.azure.functions.annotation.*

import javax.naming.Binding;


{{#operations}}
class {{classname}}: {{#removeApiSuffix}}{{classname}}{{/removeApiSuffix}}Api() {
{{#operation}}
  {{#allParams}}
    {{#isEnum}}
      enum class {{enumName}}_{{operationId}}(val value: {{^isContainer}}{{dataType}}{{/isContainer}}{{#isContainer}}kotlin.String{{/isContainer}}) {
        {{#allowableValues}}
          {{#enumVars}}
              {{&name}}({{{value}}}){{^-last}},{{/-last}}
          {{/enumVars}}
        {{/allowableValues}}
      }

    {{/isEnum}}
  {{/allParams}}

  @FunctionName("{{operationId}}")
  fun {{operationId}}Function(
    {{#removeEmptyLines}}{{#lambda.indented}}{{>methodParams}}{{/lambda.indented}}{{/removeEmptyLines}}
  ): HttpResponseMessage {
    {{#lambda.indented}}{{#removeEmptyLines}}{{>apiMethodBodyParameters}}{{/removeEmptyLines}}{{/lambda.indented}}
    val response = super.{{operationId}}(request = request {{#vendorExtensions.x-azure-additional-properties}}, {{parameterName}} = {{parameterName}}{{/vendorExtensions.x-azure-additional-properties}}{{#allParams}}{{^isFormParam}}, {{paramName}} = {{paramName}}{{^defaultValue}}{{#required}}!!{{/required}}{{/defaultValue}}{{/isFormParam}}{{/allParams}})

    val builder = request.createResponseBuilder(response.status).body(response.body)
    response.headers.forEach { builder.header(it.key, it.value) }
    return builder.build()
  }
{{/operation}}
}
{{/operations}}
